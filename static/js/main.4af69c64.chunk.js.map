{"version":3,"sources":["types.ts","shared/colors.ts","shared/typography.ts","shared/loadingCat.tsx","provider/userProvider.tsx","shared/button.ts","shared/flex.ts","App/Question/styledQuestion.tsx","App/Question/styledRadio.tsx","App/Question/index.tsx","shared/table.tsx","graphql/resultGql.ts","App/Results/index.tsx","assets/icons/dropdown.svg","shared/select.ts","assets/welcome.svg","graphql/categoryGql.ts","graphql/userGql.ts","shared/textInput.tsx","App/Welcome/index.tsx","graphql/questionsGql.ts","App/index.tsx","index.tsx"],"names":["DIFFICULTY","colors","primary","dark","light","green","red","H1","styled","h1","H2","Body1","p","Body2","Label","label","StyledLoadingCat","div","props","center","css","LoadingCat","height","viewBox","fill","xmlns","overflow","id","d","opacity","UserContext","createContext","UserProvider","useState","user","setUser","useEffect","localStorage","getItem","userJSON","JSON","parse","e","removeItem","userStr","stringify","setItem","Provider","value","updateUser","Button","button","width","variant","Flex","align","justify","gap","direction","StyledContainer","StyledQuestionBody","StyledQuestionHeading","StyledQuestion","heading","body","dangerouslySetInnerHTML","__html","StyledRadio","checked","color","QuestionScreen","question","index","points","onNext","onAnswer","isDisabled","setIsDisabled","formRef","useRef","isAnsweredWrong","setIsAnsweredWrong","rightAnswerRef","correctAnswer","current","reset","ref","onSubmit","preventDefault","style","paddingTop","answers","map","answer","type","name","disabled","undefined","onClick","isCorrect","htmlFor","StyledTable","table","StyledTh","th","StyledTd","td","StyledHeader","tr","Table","headers","i","j","ADD_RESULT","gql","GET_RESULTS","ResultScreen","questions","onPlayAgain","useContext","results","setResults","resultBody","moment","parseInt","createdAt","fromNow","Math","floor","rightQuestions","totalQuestions","useQuery","resultData","data","resultsLoading","loading","resultsError","error","getResults","textAlign","length","margin","SelectContainer","Select","select","dropdownIcon","GET_CATEGORIES","CREATE_USER","StyledInputContainer","StyledInput","input","TextInput","placeholder","onChange","StartScreen","callback","categories","setCategories","amount","setAmount","EASY","difficulty","setDifficulty","category","setCategory","setName","nameError","setNameError","isNameDisabled","setIsNameDisabled","useMutation","createUser","createUserLoading","categoriesLoading","categoriesData","categoriesError","difficulties","MEDIUM","HARD","console","log","handleSubmit","event","a","trim","categoryObj","find","variables","res","minHeight","src","welcomeSvg","alt","message","toString","target","toLowerCase","GET_QUESTIONS","CenterContainer","CenterContainerChild","App","isGameStarted","setIsGameStarted","isGameOver","setIsGameOver","setQuestions","setPoints","currentQuestionIndex","setCurrentQuestionIndex","useLazyQuery","getQuestions","questionsData","questionsError","isLoadingQuestions","addResult","addResultLoading","resultObj","userID","Question","submitResult","categoryID","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af69c64.chunk.js","sourcesContent":["export type QuestionType = {\n    id: string;\n    category: CategoryType;\n    type: string;\n    difficulty: DIFFICULTY;\n    question: string;\n    correctAnswer: string;\n    answers: string[];\n}\n\nexport enum DIFFICULTY {\n    EASY = 'EASY',\n    MEDIUM = 'MEDIUM',\n    HARD = 'HARD',\n}\n\nexport type CategoryType = {\n    id: number;\n    name: string;\n}","export const colors = {\n    primary: {\n        '1': '#6C63FF',\n        '2': '#554ddb',\n        '3': '#CED0F1',\n    },\n    dark: {\n        '1': '#3f3d56',\n        '2': '#807E94',\n        '3': '#B4B3BE',\n        '4': '#E3E3E8',\n        '5': '#EBEBED',\n    },\n    light: {\n        '1': '#FBFBFF',\n        '2': '#F9F9F9',\n        '3': '#EEEEEE',\n    },\n    green: {\n        '1': '#1D7540',\n        '2': '#83DEA8',\n        '3': '#C4E9D3',\n    },\n    red: {\n        '1': '#992B2B',\n        '2': '#F08D8D',\n        '3': '#F2D0D0',\n    }\n}","import styled from 'styled-components';\nimport { colors } from './colors';\n\n\nexport const H1 = styled.h1`\n    font-size: 45px;\n    font-family: 'poppins';\n    font-weight: 400;\n    color: ${colors.dark['1']};\n`\n\n\nexport const H2 = styled.h1`\n    font-size: 30px;\n    font-family: 'poppins';\n    font-weight: 500;\n    color: ${colors.dark['1']};\n`\n\n\nexport const Body1 = styled.p`\n    font-size: 15px;\n    font-family: 'poppins';\n    color: ${colors.dark['1']};\n    font-weight: 500;\n`\n\nexport const Body2 = styled.p`\n    font-size: 13px;\n    font-family: 'poppins';\n    color: ${colors.dark['2']};\n    font-weight: 600;\n`\n\nexport const Label = styled.label`\n    font-size: 16px;\n    font-family: 'poppins';\n    font-weight: 400;\n    color: ${colors.dark['1']};\n`","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Body1 } from \"./typography\";\n\nconst StyledLoadingCat = styled.div<{ center: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${(props) =>\n    props.center === true &&\n    css`\n      justify-content: center;\n    `}\n\n  p {\n    transform: translateX(20px);\n  }\n\n  #cat-head {\n    transform-origin: bottom;\n    animation: cat-head 2s infinite forwards;\n  }\n\n  #cat-tail {\n    transform-origin: bottom right;\n    animation: cat-tail 2s 1s infinite forwards;\n  }\n\n  #cat-left-hand {\n    transform-origin: bottom right;\n    animation: cat-hand 2s infinite forwards;\n  }\n\n  #cat-right-hand {\n    transform-origin: bottom left;\n    animation: cat-hand 1s infinite forwards;\n  }\n\n  @keyframes cat-head {\n    50% {\n      transform: rotate(5deg);\n    }\n  }\n\n  @keyframes cat-tail {\n    50% {\n      transform: rotate(10deg);\n    }\n  }\n\n  @keyframes cat-hand {\n    50% {\n      transform: translateY(2px);\n    }\n  }\n`;\n\nconst LoadingCat: React.FC<{ label: string; center?: boolean }> = ({\n  label,\n  center = false,\n}) => {\n  return (\n    <StyledLoadingCat center={center}>\n      <svg\n        // width=\"50\"\n        height=\"100\"\n        viewBox=\"0 0 98 117\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        overflow=\"visible\"\n      >\n        <g id=\"Group 17\">\n          <path\n            id=\"Vector\"\n            d=\"M65.679 113.225C65.941 113.228 66.203 113.232 66.4686 113.232C66.7342 113.232 66.9962 113.228 67.2583 113.225C81.1483 112.909 91.2159 104.248 88.6532 95.1606L82.4045 72.9916L80.8253 67.3821L52.8298 67.8585L51.1286 73.3462L44.4312 94.9457C41.5957 104.083 51.6633 112.909 65.679 113.225Z\"\n            fill=\"#3F3D56\"\n          />\n          <path\n            id=\"Vector_2\"\n            opacity=\"0.2\"\n            d=\"M51.1285 73.3462C55.9019 76.0693 61.3169 77.4721 66.8148 77.4098C72.3127 77.3474 77.6944 75.8222 82.4045 72.9916L80.8253 67.3821L52.8298 67.8585L51.1285 73.3462Z\"\n            fill=\"black\"\n          />\n          <path\n            id=\"cat-tail\"\n            d=\"M49.8996 90.9091C46.5172 87.7019 39.735 84.237 26.136 83.3691C2.41813 81.8539 6.96575 67.0851 7.17046 66.4576C7.59999 65.1414 6.9395 64.3611 5.68376 64.7234C4.98265 64.9802 4.34458 65.3836 3.81232 65.9065C3.28007 66.4294 2.86593 67.0599 2.59767 67.7555C2.33217 68.5266 -3.59054 86.6479 23.172 88.3556C47.2584 89.8944 48.4044 99.7977 48.4087 99.8969C48.4629 100.998 49.5913 101.216 50.9315 100.386C52.2718 99.5555 53.3156 97.9899 53.2634 96.889C53.2517 96.6564 53.049 93.8945 49.8996 90.9091Z\"\n            fill=\"#3F3D56\"\n          />\n          <path\n            id=\"Vector_3\"\n            d=\"M79.3897 116.456C79.8139 116.456 80.2339 116.372 80.6258 116.21C81.0178 116.048 81.3739 115.811 81.6738 115.511C81.9738 115.212 82.2117 114.857 82.3741 114.466C82.5364 114.074 82.6199 113.655 82.6199 113.232V99.262C82.6189 98.4077 82.2781 97.5887 81.6724 96.9849C81.0668 96.3812 80.2457 96.0421 79.3897 96.0421C78.5336 96.0421 77.7126 96.3812 77.1069 96.9849C76.5012 97.5887 76.1605 98.4077 76.1594 99.262V113.232C76.1594 113.655 76.243 114.074 76.4053 114.466C76.5676 114.857 76.8056 115.212 77.1055 115.511C77.4055 115.811 77.7616 116.048 78.1535 116.21C78.5454 116.372 78.9655 116.456 79.3897 116.456V116.456Z\"\n            fill=\"#3F3D56\"\n          />\n          <path\n            id=\"cat-right-hand\"\n            d=\"M76.5574 83.2906C76.7347 83.6752 76.9861 84.0212 77.2974 84.3088C77.6087 84.5964 77.9737 84.82 78.3716 84.9668C78.7694 85.1137 79.1924 85.1809 79.6163 85.1646C80.0402 85.1483 80.4567 85.0488 80.8421 84.8718L93.5585 79.0328C93.9443 78.8562 94.2914 78.6053 94.5801 78.2947C94.8687 77.9841 95.0931 77.6197 95.2406 77.2224C95.388 76.8252 95.4555 76.4028 95.4393 75.9794C95.4231 75.5561 95.3234 75.1401 95.146 74.7553C94.9685 74.3704 94.7169 74.0242 94.4053 73.7365C94.0937 73.4488 93.7284 73.2251 93.3302 73.0784C92.9319 72.9317 92.5087 72.8647 92.0845 72.8814C91.6603 72.898 91.2436 72.998 90.8582 73.1755L78.1418 79.0144C77.7564 79.1914 77.4097 79.4423 77.1215 79.753C76.8333 80.0637 76.6093 80.4279 76.4621 80.825C76.315 81.2221 76.2477 81.6442 76.264 82.0672C76.2804 82.4903 76.3801 82.906 76.5574 83.2906Z\"\n            fill=\"#3F3D56\"\n          />\n          <path\n            id=\"cat-left-hand\"\n            d=\"M56.3798 83.2906C56.2025 83.6752 55.9511 84.0212 55.6398 84.3088C55.3285 84.5964 54.9635 84.82 54.5656 84.9668C54.1678 85.1137 53.7448 85.1809 53.3209 85.1646C52.897 85.1483 52.4805 85.0488 52.0952 84.8718L39.3788 79.0328C38.9929 78.8562 38.6458 78.6053 38.3572 78.2947C38.0685 77.9841 37.8441 77.6197 37.6966 77.2224C37.5492 76.8252 37.4817 76.4028 37.4979 75.9794C37.5141 75.5561 37.6138 75.1401 37.7912 74.7553C37.9687 74.3704 38.2204 74.0242 38.5319 73.7365C38.8435 73.4488 39.2088 73.2251 39.6071 73.0784C40.0053 72.9317 40.4286 72.8647 40.8527 72.8814C41.2769 72.898 41.6936 72.998 42.0791 73.1755L54.7955 79.0144C55.1808 79.1914 55.5275 79.4423 55.8157 79.753C56.1039 80.0637 56.3279 80.4279 56.4751 80.825C56.6222 81.2221 56.6895 81.6442 56.6732 82.0672C56.6568 82.4903 56.5572 82.906 56.3798 83.2906Z\"\n            fill=\"#3F3D56\"\n          />\n          <path\n            id=\"Vector_4\"\n            d=\"M53.5477 116.456C53.1235 116.456 52.7034 116.372 52.3115 116.21C51.9196 116.048 51.5635 115.811 51.2635 115.511C50.9635 115.212 50.7256 114.857 50.5633 114.466C50.4009 114.074 50.3174 113.655 50.3174 113.232V99.262C50.3184 98.4077 50.6592 97.5887 51.2649 96.9849C51.8706 96.3812 52.6916 96.0421 53.5477 96.0421C54.4037 96.0421 55.2247 96.3812 55.8304 96.9849C56.4361 97.5887 56.7769 98.4077 56.7779 99.262V113.232C56.7779 113.655 56.6944 114.074 56.532 114.466C56.3697 114.857 56.1318 115.212 55.8318 115.511C55.5318 115.811 55.1758 116.048 54.7838 116.21C54.3919 116.372 53.9719 116.456 53.5477 116.456V116.456Z\"\n            fill=\"#3F3D56\"\n          />\n          <g id=\"cat-head\">\n            <path\n              id=\"Vector_5\"\n              d=\"M92.3129 25.114C92.499 24.5957 92.5474 24.0382 92.4536 23.4958L90.6955 13.174L88.9374 2.85226C88.8425 2.29496 88.6023 1.77241 88.2409 1.33714C87.8795 0.901872 87.4096 0.569221 86.8785 0.372612C86.3475 0.176002 85.7739 0.122364 85.2155 0.217097C84.6571 0.311831 84.1335 0.551598 83.6973 0.912291L75.6196 7.59265L70.9318 11.4695C67.6704 10.9914 64.353 11.0413 61.1075 11.6173L56.2409 7.59264L48.1632 0.912276C47.7271 0.551583 47.2035 0.311818 46.6451 0.217083C46.0867 0.122349 45.5131 0.175981 44.982 0.37259C44.451 0.5692 43.9811 0.901857 43.6197 1.33713C43.2583 1.7724 43.018 2.29495 42.9231 2.85225L41.165 13.174L39.407 23.4958C39.3294 23.9371 39.3464 24.3898 39.4569 24.8241C39.5674 25.2584 39.7689 25.6643 40.0481 26.0152C37.1929 30.727 35.6552 36.1164 35.595 41.6225C35.5348 47.1286 36.9543 52.5501 39.7057 57.323C42.4572 62.0959 46.4401 66.0456 51.2399 68.7611C56.0397 71.4767 61.481 72.8588 66.9976 72.7637C72.5142 72.6685 77.9045 71.0996 82.6074 68.2202C87.3104 65.3408 91.1541 61.2561 93.7387 56.3912C96.3233 51.5264 97.5543 46.0591 97.3035 40.5584C97.0528 35.0577 95.3295 29.7245 92.3129 25.114Z\"\n              fill=\"#3F3D56\"\n            />\n            <path\n              id=\"Vector_6\"\n              d=\"M83.493 5.5109L73.6975 13.6119L73.6973 13.6122C73.4814 13.7908 73.3164 14.0229 73.2189 14.2853C73.1214 14.5476 73.0948 14.831 73.1418 15.1069C73.1888 15.3828 73.3077 15.6414 73.4866 15.8569C73.6655 16.0724 73.8981 16.2371 74.161 16.3344L86.0887 20.7503C86.3516 20.8477 86.6356 20.8742 86.912 20.8274C87.1885 20.7805 87.4478 20.6618 87.6637 20.4832C87.8796 20.3046 88.0447 20.0725 88.1422 19.8101C88.2398 19.5477 88.2664 19.2643 88.2194 18.9884L86.0874 6.47128C86.042 6.19474 85.9236 5.93526 85.7444 5.71951C85.5652 5.50376 85.3317 5.33951 85.0678 5.24365C84.8884 5.17671 84.6984 5.1423 84.5068 5.14203C84.1361 5.14272 83.7773 5.27326 83.493 5.5109V5.5109Z\"\n              fill=\"#E6E6E6\"\n            />\n            <path\n              id=\"Vector_7\"\n              d=\"M46.7928 5.24365C46.5289 5.33951 46.2954 5.50375 46.1162 5.7195C45.937 5.93526 45.8186 6.19474 45.7731 6.47128L43.6412 18.9884C43.5942 19.2643 43.6208 19.5477 43.7184 19.8101C43.8159 20.0725 43.981 20.3046 44.1969 20.4832C44.4128 20.6618 44.6721 20.7805 44.9485 20.8274C45.225 20.8742 45.509 20.8477 45.7719 20.7503L57.6996 16.3344C57.9625 16.2371 58.195 16.0724 58.3739 15.8569C58.5529 15.6414 58.6718 15.3828 58.7188 15.1069C58.7658 14.831 58.7392 14.5476 58.6417 14.2853C58.5442 14.0229 58.3792 13.7908 58.1633 13.6122L48.3676 5.5109C48.0833 5.27326 47.7245 5.14272 47.3537 5.14203C47.1622 5.1423 46.9722 5.17671 46.7928 5.24365Z\"\n              fill=\"#E6E6E6\"\n            />\n            <path\n              id=\"Vector_8\"\n              d=\"M66.229 0C66.436 0.428466 66.637 0.861566 66.8261 1.30352C69.0536 6.48799 69.8047 12.1852 68.997 17.7683C68.5929 17.1832 68.1682 16.5735 67.7362 15.9572C68.6614 10.5989 68.1412 5.09139 66.229 0V0Z\"\n              fill=\"#3F3D56\"\n            />\n            <path\n              id=\"Vector_9\"\n              d=\"M62.9987 3.94019C63.2058 4.36866 63.4068 4.80175 63.5958 5.24371C65.8233 10.4282 66.5745 16.1254 65.7667 21.7085C65.3626 21.1234 64.9379 20.5137 64.5059 19.8974C65.4311 14.5391 64.9109 9.03158 62.9987 3.94019V3.94019Z\"\n              fill=\"#3F3D56\"\n            />\n            <path\n              id=\"Vector_10\"\n              d=\"M53.0396 18.6093L53.4947 12.8337L53.9497 7.05809C53.9743 6.74625 54.0807 6.44635 54.2582 6.18854C54.4357 5.93074 54.6781 5.7241 54.961 5.58942C55.2439 5.45473 55.5573 5.39673 55.8698 5.42126C56.1823 5.44578 56.4828 5.55196 56.7411 5.72912L61.5254 9.01022L65.019 11.4062C65.2423 11.1453 65.5196 10.9358 65.8318 10.7921C66.144 10.6485 66.4838 10.5741 66.8276 10.5741C67.1714 10.5741 67.5111 10.6485 67.8233 10.7921C68.1355 10.9358 68.4128 11.1453 68.6361 11.4062L72.1298 9.01022L76.9141 5.72912C77.1724 5.55196 77.4729 5.44578 77.7853 5.42126C78.0978 5.39673 78.4112 5.45473 78.6941 5.58942C78.977 5.7241 79.2194 5.93074 79.3969 6.18854C79.5744 6.44635 79.6808 6.74625 79.7054 7.05809L80.1604 12.8337L80.6155 18.6093C80.6401 18.9211 80.582 19.2339 80.447 19.5162C80.312 19.7986 80.105 20.0405 79.8467 20.2176C79.5884 20.3948 79.2879 20.5009 78.9754 20.5255C78.6629 20.55 78.3495 20.492 78.0666 20.3573L72.8272 17.8628L68.5223 15.8132C68.3008 16.0372 68.0369 16.2151 67.746 16.3364C67.4551 16.4578 67.1429 16.5204 66.8275 16.5204C66.5122 16.5204 66.2 16.4578 65.9091 16.3364C65.6181 16.2151 65.3543 16.0372 65.1328 15.8132L60.8278 17.8628L55.5885 20.3573C55.3056 20.492 54.9922 20.55 54.6797 20.5255C54.3673 20.501 54.0668 20.3948 53.8084 20.2176C53.5501 20.0405 53.3431 19.7986 53.2081 19.5162C53.0732 19.2339 53.0151 18.9211 53.0396 18.6093V18.6093Z\"\n              fill=\"#6C63FF\"\n            />\n            <g id=\"cat-face\">\n              <path\n                id=\"Vector_11\"\n                d=\"M66.4687 50.5468C68.8473 50.5468 70.7757 48.6223 70.7757 46.2484C70.7757 43.8744 68.8473 41.95 66.4687 41.95C64.09 41.95 62.1617 43.8744 62.1617 46.2484C62.1617 48.6223 64.09 50.5468 66.4687 50.5468Z\"\n                fill=\"#E6E6E6\"\n              />\n              <path\n                id=\"Vector_12\"\n                d=\"M66.4687 45.1737C68.0545 45.1737 69.34 44.6926 69.34 44.0991C69.34 43.5057 68.0545 43.0245 66.4687 43.0245C64.8829 43.0245 63.5973 43.5057 63.5973 44.0991C63.5973 44.6926 64.8829 45.1737 66.4687 45.1737Z\"\n                fill=\"#3F3D56\"\n              />\n              <path\n                id=\"Vector_13\"\n                d=\"M66.6481 55.5615C66.3889 55.5615 66.1322 55.5106 65.8927 55.4116C65.6532 55.3125 65.4355 55.1674 65.2522 54.9845C65.0689 54.8015 64.9235 54.5844 64.8243 54.3453C64.7251 54.1063 64.6741 53.8501 64.6741 53.5914V48.7557H68.6221V53.5914C68.6221 53.8501 68.5711 54.1063 68.4719 54.3453C68.3727 54.5844 68.2273 54.8015 68.044 54.9845C67.8607 55.1674 67.643 55.3125 67.4035 55.4116C67.164 55.5106 66.9073 55.5615 66.6481 55.5615V55.5615Z\"\n                fill=\"#FF6584\"\n              />\n              <path\n                id=\"Vector_14\"\n                d=\"M71.1345 41.5917C71.1345 42.1852 71.6166 41.5917 72.2113 41.5917C72.806 41.5917 73.2881 42.1852 73.2881 41.5917C73.2875 41.3071 73.1738 41.0343 72.9719 40.8333C72.77 40.6322 72.4965 40.5193 72.2113 40.5193C71.9261 40.5193 71.6526 40.6322 71.4507 40.8333C71.2488 41.0343 71.1351 41.3071 71.1345 41.5917Z\"\n                fill=\"#E6E6E6\"\n              />\n              <path\n                id=\"Vector_15\"\n                d=\"M61.8027 41.5917C61.8027 42.1852 61.3206 41.5917 60.726 41.5917C60.1313 41.5917 59.6492 42.1852 59.6492 41.5917C59.6498 41.3071 59.7635 41.0343 59.9654 40.8333C60.1673 40.6322 60.4408 40.5193 60.726 40.5193C61.0112 40.5193 61.2847 40.6322 61.4866 40.8333C61.6884 41.0343 61.8021 41.3071 61.8027 41.5917V41.5917Z\"\n                fill=\"#E6E6E6\"\n              />\n            </g>\n          </g>\n        </g>\n      </svg>\n      <Body1>{label}</Body1>\n    </StyledLoadingCat>\n  );\n};\n\nexport default LoadingCat;\n","import React, { createContext, useEffect, useState } from \"react\";\n\nexport const UserContext = createContext(null);\n\ntype UserType = {\n  id: string;\n  name: string;\n};\n\nexport type UserContextType = {\n  user: UserType;\n  updateUser: React.Dispatch<React.SetStateAction<UserType | undefined>>;\n};\n\nexport const UserProvider = (props: any) => {\n  const [user, setUser] = useState<UserType>();\n\n  // load user from localStorage when application starts\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      try {\n        const userJSON = JSON.parse(user);\n        setUser(userJSON);\n      } catch (e) {\n        localStorage.removeItem(\"user\");\n      }\n    }\n  }, []);\n\n  // update user object on localstorage each time it is updated\n  useEffect(() => {\n    if (user) {\n      const userStr = JSON.stringify(user);\n      localStorage.setItem(\"user\", userStr);\n    }\n  }, [user]);\n\n  return (\n    <UserContext.Provider value={{ user, updateUser: setUser }} {...props} />\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { colors } from './colors';\n\ntype ButtonProps = {\n    width?: string;\n    variant?: \"outlined\" | \"contained\";\n}\n\nconst Button = styled.button<ButtonProps>`\n    font-family: 'poppins';\n    font-weight: 500;\n    color: white;\n    text-transform: uppercase;\n    padding: 10px 30px;\n    background-color: ${colors.primary['1']};\n    cursor: pointer;\n    text-align: center;\n    border-radius: 10px;\n    transition: all ease-in-out .2s;\n    border: 2px solid ${colors.primary['2']};\n\n    :hover {\n        background-color: ${colors.primary['2']};\n        transform: scale(.95);\n    }\n\n    ${(props) => props.width && css`width: ${props.width}`};\n    ${(props) => props.variant === \"outlined\" && css`\n        background-color: white;\n        color: ${colors.primary['1']};\n        border: 2px solid ${colors.primary['1']};\n        :hover {\n            background-color: white;\n        }\n    `}\n`\n\nexport default Button;","import styled, { css } from 'styled-components';\n\ntype FlexProps = {\n    align?: string;\n    justify?: string;\n    gap?: string;\n    direction?: string;\n}\n\nexport const Flex = styled.div<FlexProps>`\n    display: flex;\n    flex-direction: column;\n\n    ${(props: any) => props.align && css`align-items: ${props.align};`}\n    ${(props: any) => props.justify && css`justify-content: ${props.justify};`}\n    ${(props: any) => props.gap && css`gap: ${props.gap};`}\n    ${(props: any) => props.direction && css`flex-direction: ${props.direction};`}\n`","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../shared/colors\";\nimport { Body1, Body2 } from \"../../shared/typography\";\n\nconst StyledContainer = styled.div`\n  position: relative;\n  width: 100%;\n  margin-top: 30px;\n`;\n\nconst StyledQuestionBody = styled.div`\n  padding: 30px 20px;\n  width: 100%;\n  border-radius: 10px;\n  background-color: ${colors.light[\"1\"]};\n  border: 1px solid ${colors.primary[\"3\"]};\n`;\n\nconst StyledQuestionHeading = styled.div`\n  padding: 10px 30px;\n  border-radius: 10px;\n  position: absolute;\n  background-color: ${colors.light[\"1\"]};\n  border: 1px solid ${colors.primary[\"3\"]};\n  top: 0%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n`;\n\ntype Props = {\n  heading: string;\n  body: string;\n};\n\nconst StyledQuestion: React.FC<Props> = ({ heading, body }) => {\n  return (\n    <StyledContainer>\n      <StyledQuestionHeading>\n        <Body2 dangerouslySetInnerHTML={{__html: heading}}/>\n      </StyledQuestionHeading>\n      <StyledQuestionBody>\n        <Body1 dangerouslySetInnerHTML={{__html: body}}/>\n      </StyledQuestionBody>\n    </StyledContainer>\n  );\n};\n\nexport default StyledQuestion;\n","import styled, { css } from \"styled-components\";\nimport { colors } from \"../../shared/colors\";\n\ntype Props = {\n  color: \"green\" | \"red\";\n  checked?: boolean;\n};\n\nconst StyledRadio = styled.div<Props>`\n  width: 100%;\n\n  label {\n    width: 100%;\n    display: flex;\n    background-color: ${colors.light[\"1\"]};\n    border-radius: 10px;\n    border: 1px solid ${colors.dark[\"4\"]};\n    padding: 10px 20px;\n    cursor: pointer;\n    transition: all ease-in-out 0.2s;\n    gap: 20px;\n    align-items: center;\n\n    :before {\n      content: \"\";\n      height: 15px;\n      width: 15px;\n      border: 2px solid ${colors.dark[\"2\"]};\n      border-radius: 50%;\n      display: inline-block;\n      transition: all ease-in-out 0.2s;\n    }\n  }\n\n  input {\n    display: none;\n  }\n\n  input:checked + label {\n    background-color: ${colors.primary[\"1\"]};\n    color: white;\n  }\n\n  ${(props) =>\n    props.checked === true &&\n    css`\n      label {\n        background-color: ${colors.green[\"3\"]};\n        color: ${colors.green[\"1\"]};\n        border: 1px solid ${colors.green[\"1\"]};\n        :before {\n          border: 2px solid ${colors.green[\"1\"]};\n        }\n      }\n    `}\n\n  ${(props) =>\n    css`\n      input:checked {\n        + label {\n          background-color: ${colors[props.color][\"3\"]};\n          color: ${colors[props.color][\"1\"]};\n          border: 1px solid ${colors[props.color][\"1\"]};\n        }\n        + label:before {\n          border: 2px solid ${colors[props.color][\"1\"]};\n        }\n      }\n    `}\n`;\n\nexport default StyledRadio;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Button from \"../../shared/button\";\nimport { Flex } from \"../../shared/flex\";\nimport { Label } from \"../../shared/typography\";\nimport StyledQuestion from \"./styledQuestion\";\nimport StyledRadio from \"./styledRadio\";\nimport { QuestionType } from \"../../types\";\n\ntype Props = {\n  question: QuestionType;\n  points: number;\n  index: number;\n  onNext: () => void;\n  onAnswer: (isCorrect: boolean) => void;\n};\n\nconst QuestionScreen: React.FC<Props> = ({\n  question,\n  points,\n  index,\n  onNext,\n  onAnswer,\n}) => {\n  const [isDisabled, setIsDisabled] = useState<boolean>(false);\n  const formRef = useRef<HTMLFormElement>(null);\n  const [isAnsweredWrong, setIsAnsweredWrong] = useState(false);\n  const rightAnswerRef = useRef<HTMLInputElement>(null);\n  const correctAnswer = question.correctAnswer;\n\n  useEffect(() => {\n    setIsDisabled(false);\n    setIsAnsweredWrong(false);\n    formRef.current?.reset();\n  }, [index]);\n\n  function handleAnswer(isCorrect: boolean) {\n    onAnswer(isCorrect);\n    setIsDisabled(true);\n    setIsAnsweredWrong(!isCorrect);\n  }\n\n  return (\n    <form ref={formRef} onSubmit={(e) => e.preventDefault()}>\n      <Flex\n        direction=\"column\"\n        gap=\"30px\"\n        style={{ paddingTop: \"30px\" }}\n        align={\"center\"}\n      >\n        <StyledQuestion\n          heading={`Question : ${index + 1}`}\n          body={question.question}\n        />\n        <Flex gap={\"10px\"} style={{ width: \"100%\" }}>\n          {question.answers.map((answer, index) => (\n            <StyledRadio\n              color={correctAnswer === answer ? \"green\" : \"red\"}\n              key={index}\n              checked={isAnsweredWrong && correctAnswer === answer}\n            >\n              <input\n                type=\"radio\"\n                name={\"answer\"}\n                disabled={isDisabled}\n                id={`answer-${question.id}-${index}`}\n                value={answer}\n                ref={correctAnswer === answer ? rightAnswerRef : undefined}\n                onClick={() => handleAnswer(correctAnswer === answer)}\n              />\n              <Label\n                htmlFor={`answer-${question.id}-${index}`}\n                dangerouslySetInnerHTML={{ __html: answer }}\n              />\n            </StyledRadio>\n          ))}\n        </Flex>\n        <Button type=\"submit\" onClick={() => onNext()} width=\"100%\">\n          Next\n        </Button>\n      </Flex>\n    </form>\n  );\n};\n\nexport default QuestionScreen;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  tr:nth-child(even) {\n    background-color: #eaeaea;\n  }\n  th,\n  td {\n    text-align: left;\n    padding: 0 10px;\n  }\n`;\n\nconst StyledTh = styled.th`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 23px;\n  color: rgba(63, 61, 86, 0.67);\n  padding-bottom: 10px;\n`;\n\nconst StyledTd = styled.td`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 2.5rem;\n\n  color: #3f3d56;\n`;\n\nconst StyledHeader = styled.tr`\n  border-bottom: 1px solid black;\n`;\n\ntype Props = {\n  headers: string[];\n  body: (string | number)[][];\n};\n\nconst Table: React.FC<Props> = (props) => {\n  return (\n    <StyledTable>\n      <thead>\n        <StyledHeader>\n          {props.headers.map((i, index) => (\n            <StyledTh key={index}>{i}</StyledTh>\n          ))}\n        </StyledHeader>\n      </thead>\n      <tbody>\n        {props.body.map((i, index) => (\n          <tr key={index}>\n            {i.map((j, index) => (\n              <StyledTd key={index}>{j}</StyledTd>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nexport default Table;\n","import { gql } from '@apollo/client';\n\nexport const ADD_RESULT = gql`\n    mutation ADD_RESULT($category: String!, $userID: String!, $difficulty: String!, $totalQuestions: Int!, $rightQuestions:Int!) {\n        addResult(resultInput: {\n            category: $category,\n            userID: $userID,\n            difficulty: $difficulty,\n            totalQuestions: $totalQuestions,\n            rightQuestions: $rightQuestions,\n        }) {\n            id\n            user { id name }\n            totalQuestions\n            rightQuestions\n            category\n            createdAt\n        }\n    }\n`\n\nexport const GET_RESULTS = gql`\n    query GET_RESULTS {\n        getResults {\n        id\n        user { id name }\n        totalQuestions\n        rightQuestions\n        category\n        createdAt\n        }\n    }\n`","import React, { useContext, useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nimport Button from \"../../shared/button\";\nimport { Flex } from \"../../shared/flex\";\nimport { H2, H1 } from \"../../shared/typography\";\nimport { QuestionType } from \"../../types\";\nimport { UserContext, UserContextType } from \"../../provider/userProvider\";\nimport Table from \"../../shared/table\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_RESULTS } from \"../../graphql/resultGql\";\nimport LoadingCat from \"../../shared/loadingCat\";\n\ntype Props = {\n  points: number;\n  questions: QuestionType[];\n  onPlayAgain: () => void;\n};\n\ntype ResultType = {\n  createdAt: string;\n  category: string;\n  difficulty: string;\n  rightQuestions: number;\n  totalQuestions: number;\n  user: {\n    id: string;\n    name: string;\n  };\n};\n\nconst ResultScreen: React.FC<Props> = ({ points, questions, onPlayAgain }) => {\n  const { user } = (useContext(UserContext) as unknown) as UserContextType;\n  const resultHeaders = [\"Name\", \"Time\", \"Score\"];\n  const [results, setResults] = useState<ResultType[]>();\n\n  const resultBody = results?.map((i) => [\n    i.user.id === user.id ? \"You\" : i.user.name,\n    moment(parseInt(i.createdAt)).fromNow(),\n    `${Math.floor((i.rightQuestions / i.totalQuestions) * 100)}%`,\n  ]);\n\n  const {\n    data: resultData,\n    loading: resultsLoading,\n    error: resultsError,\n  } = useQuery(GET_RESULTS);\n\n  useEffect(() => {\n    if (resultData) {\n      setResults(resultData.getResults);\n    }\n  }, [resultData]);\n\n  return (\n    <Flex align={\"center\"} gap={\"5px\"}>\n      <H2 style={{ textAlign: \"center\" }}>{user.name} you’ve scored</H2>\n      <H1>\n        {points} out of {questions.length * 10}\n      </H1>\n      <Button onClick={onPlayAgain}>Play again</Button>\n      <H2 style={{ textAlign: \"center\", margin: \"30px 0\" }}>SCOREBOARD</H2>\n      {resultsError && <span>{resultsError}</span>}\n      {resultBody && !resultsLoading ? (\n        <Table headers={resultHeaders} body={resultBody} />\n      ) : (\n        <LoadingCat label={\"Loading scores...\"} />\n      )}\n    </Flex>\n  );\n};\n\nexport default ResultScreen;\n","export default __webpack_public_path__ + \"static/media/dropdown.e1489b60.svg\";","import styled from 'styled-components';\nimport { colors } from './colors';\nimport dropdownIcon from '../assets/icons/dropdown.svg';\n\n\nexport const SelectContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 5px;\n`\n\nexport const Select = styled.select`\n    padding: 10px;\n    border-radius: 10px;\n    cursor: pointer;\n    font-size: 1.1rem;\n    font-weight: 400;\n    background-color: ${colors.light['1']};\n    border: 2px solid ${colors.dark['4']};\n    color: ${colors.dark['1']};\n    outline: none;\n    transition: all ease-in-out .2s;\n\n    /* Remove default styling (arrow) */\n    appearance: none;\n    --webkit-appearance: none;\n    --moz-appearance: none;\n\n    background-image: url('${dropdownIcon}');\n    background-repeat: no-repeat;\n    background-position: right 10px top 50%;\n\n    :hover, :focus {\n        border: 2px solid ${colors.dark['3']};\n    }\n`","export default __webpack_public_path__ + \"static/media/welcome.674d876c.svg\";","import { gql } from '@apollo/client';\n\n\nexport const GET_CATEGORIES = gql`\n    query GET_CATEGORIES {\n        getCategories {\n            id\n            name\n        }\n    }\n`","import { gql } from '@apollo/client';\n\nexport const CREATE_USER = gql`\n    mutation CREATE_USER($name: String!) {\n        createUser(name: $name) {\n            id\n            name\n        }\n    }\n`","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Label } from \"./typography\";\n\nconst StyledInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 5px;\n`;\n\nconst StyledInput = styled.input`\n  padding: 10px 20px;\n  border: 2px solid #E3E3E8;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.1rem;\n  font-weight: 400;\n  background-color: #fbfbff;\n  transition: all ease-in-out .2s;\n\n  outline: none;\n\n  :focus {\n      border-color: #B4B3BE;\n  }\n`;\n\ntype Props = {\n  label?: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled: boolean;\n  error: string;\n  placeholder: string;\n};\n\nconst TextInput: React.FC<Props> = (props) => {\n  return (\n    <StyledInputContainer>\n      <Label>Enter your name</Label>\n      <StyledInput\n        placeholder={props.placeholder}\n        type=\"text\"\n        value={props.value}\n        onChange={props.onChange}\n        disabled={props.disabled}\n      />\n      <p>{props.error}</p>\n    </StyledInputContainer>\n  );\n};\n\nexport default TextInput;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n\nimport { H1, Label } from \"../../shared/typography\";\nimport { Flex } from \"../../shared/flex\";\nimport { SelectContainer, Select } from \"../../shared/select\";\nimport Button from \"../../shared/button\";\nimport LoadingCat from \"../../shared/loadingCat\";\nimport welcomeSvg from \"../../assets/welcome.svg\";\nimport { GET_CATEGORIES } from \"../../graphql/categoryGql\";\nimport { DIFFICULTY, CategoryType } from \"../../types\";\nimport { UserContext, UserContextType } from \"../../provider/userProvider\";\nimport { CREATE_USER } from \"../../graphql/userGql\";\nimport TextInput from \"../../shared/textInput\";\n\ntype Props = {\n  callback: (\n    amount: number,\n    difficulty: DIFFICULTY,\n    category: CategoryType\n  ) => void;\n};\n\nconst StartScreen: React.FC<Props> = ({ callback }) => {\n  const [categories, setCategories] = useState<CategoryType[]>([]);\n\n  // input field value states\n  const [amount, setAmount] = useState<number>(10);\n  const [difficulty, setDifficulty] = useState<DIFFICULTY>(DIFFICULTY.EASY);\n  const [category, setCategory] = useState<number>(9);\n  const [name, setName] = useState<string>(\"\");\n\n  // input field validation\n  const [nameError, setNameError] = useState<string>(\"\");\n  const [isNameDisabled, setIsNameDisabled] = useState<boolean>(false);\n\n  // graphql queries\n  const [createUser, { loading: createUserLoading }] = useMutation(CREATE_USER);\n  const {\n    loading: categoriesLoading,\n    data: categoriesData,\n    error: categoriesError,\n  } = useQuery(GET_CATEGORIES);\n\n  // getting data from context\n  const { user, updateUser } = (useContext(\n    UserContext\n  ) as unknown) as UserContextType;\n\n  // select field options\n  const validAmounts = [3, 5, 10, 15, 20];\n  const difficulties = [DIFFICULTY.EASY, DIFFICULTY.MEDIUM, DIFFICULTY.HARD];\n\n  useEffect(() => {\n    console.log(user);\n    if (user?.name) {\n      setName(user.name);\n      setIsNameDisabled(true);\n    }\n  }, [user]);\n\n  // setting categories state after fetching from api\n  useEffect(() => {\n    if (categoriesData) {\n      setCategories(categoriesData[\"getCategories\"]);\n      setCategory(parseInt(categoriesData[\"getCategories\"][0].id));\n    }\n  }, [categoriesData]);\n\n  const validate = () => {\n    if (!name.trim()) {\n      setNameError(\"Name must not be empty\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const isValid = validate();\n    if (!isValid) return;\n\n    // getting category from categories array for callback\n    const categoryObj = categories.find((i) => i.id === category);\n    if (!categoryObj) return;\n\n    // call callback function if user already exists in the context\n    if (user && user.name && user.id) {\n      callback(amount, difficulty, categoryObj);\n      setNameError(\"\");\n      return;\n    }\n\n    // creating user if it doesn't exits in the context\n    try {\n      const res = await createUser({ variables: { name } });\n      updateUser({\n        name: res.data.createUser.name,\n        id: res.data.createUser.id,\n      });\n\n      callback(amount, difficulty, categoryObj);\n    } catch (e) {\n      console.log(e);\n    }\n    setNameError(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Flex\n        direction={\"column\"}\n        align={\"center\"}\n        gap={\"20px\"}\n        style={{ paddingTop: \"30px\", minHeight: \"90vh\" }}\n      >\n        {(categoriesLoading || createUserLoading) && !categoriesError ? (\n          <LoadingCat center={true} label={\"Loading ....\"} />\n        ) : (\n          <>\n            <img\n              src={welcomeSvg}\n              alt={\"Welcome cat\"}\n              style={{ width: \"100%\" }}\n            />\n            <H1 style={{ textAlign: \"center\" }}>TO THE TRIVIA</H1>\n            {categoriesError && <h3>{categoriesError.message.toString()}</h3>}\n            <Flex\n              style={{ width: \"100%\" }}\n              direction={\"column\"}\n              align={\"center\"}\n              gap={\"20px\"}\n            >\n              <TextInput\n                placeholder={\"Ex: John\"}\n                label={\"Enter your name\"}\n                disabled={isNameDisabled}\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n                error={nameError}\n              />\n\n              <SelectContainer>\n                <Label htmlFor=\"amount\">Select number of questions</Label>\n                <Select\n                  id=\"amount\"\n                  value={amount}\n                  onChange={(e) => setAmount(parseInt(e.target.value))}\n                >\n                  {validAmounts.map((amount, index) => (\n                    <option value={amount} key={index}>\n                      {amount}\n                    </option>\n                  ))}\n                </Select>\n              </SelectContainer>\n\n              <SelectContainer>\n                <Label htmlFor=\"difficulty\">Select difficulty</Label>\n                <Select\n                  id=\"difficulty\"\n                  value={difficulty}\n                  onChange={(e) =>\n                    setDifficulty(\n                      DIFFICULTY[\n                        (parseInt(\n                          e.target.value\n                        ) as unknown) as keyof typeof DIFFICULTY\n                      ]\n                    )\n                  }\n                >\n                  {difficulties.map((i, index) => (\n                    <option value={index} key={index}>\n                      {i.toLowerCase()}\n                    </option>\n                  ))}\n                </Select>\n              </SelectContainer>\n\n              <SelectContainer>\n                <Label htmlFor=\"categories\">Select category</Label>\n                <Select\n                  id={\"categories\"}\n                  value={category}\n                  onChange={(e) => setCategory(parseInt(e.target.value))}\n                >\n                  {categories.map((i) => (\n                    <option value={i.id} key={i.id}>\n                      {i.name}\n                    </option>\n                  ))}\n                </Select>\n              </SelectContainer>\n\n              <Button type={\"submit\"} width={\"100%\"}>\n                Start\n              </Button>\n            </Flex>\n          </>\n        )}\n      </Flex>\n    </form>\n  );\n};\n\nexport default StartScreen;\n","import { gql } from '@apollo/client';\n\nexport const GET_QUESTIONS = gql`\n    query GET_QUESTIONS($amount: Int!, $categoryID: Int!, $difficulty: AllowedDifficulty) {\n        getQuestions(input: {\n            amount: $amount,\n            categoryID: $categoryID,\n            difficulty: $difficulty\n        }) {\n            id\n            category { id, name }\n            type\n            difficulty\n            question\n            correctAnswer\n            answers\n        }\n    }\n`","import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n\nimport LoadingCat from \"../shared/loadingCat\";\nimport { UserContext, UserContextType } from \"../provider/userProvider\";\nimport QuestionScreen from \"./Question\";\nimport ResultScreen from \"./Results\";\nimport StartScreen from \"./Welcome\";\nimport { QuestionType, DIFFICULTY, CategoryType } from \"../types\";\nimport { GET_QUESTIONS } from \"../graphql/questionsGql\";\nimport { H2 } from \"../shared/typography\";\nimport { ADD_RESULT } from \"../graphql/resultGql\";\n\nconst CenterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  width: 100%;\n  min-height: 100vh;\n`;\n\nconst CenterContainerChild = styled.div`\n  max-width: 600px;\n  width: 100%;\n`;\n\nconst App: React.FC = () => {\n  // game main state\n  const [isGameStarted, setIsGameStarted] = useState<boolean>(false);\n  const [isGameOver, setIsGameOver] = useState<boolean>(false);\n  const [questions, setQuestions] = useState<QuestionType[]>([]);\n  const [points, setPoints] = useState<number>(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n\n  // states to register user result\n  const { user } = (useContext(UserContext) as unknown) as UserContextType;\n  const [difficulty, setDifficulty] = useState<DIFFICULTY>();\n  const [category, setCategory] = useState<CategoryType>();\n\n  // graphql queries and mutation\n  const [\n    getQuestions,\n    { data: questionsData, error: questionsError, loading: isLoadingQuestions },\n  ] = useLazyQuery(GET_QUESTIONS);\n  const [addResult, { loading: addResultLoading }] = useMutation(ADD_RESULT);\n\n  /**\n   * Load questions from the api\n   * @param amount Number of questions to load\n   * @param difficulty Difficulty of questions\n   * @param categoryID Category of questions\n   */\n  function loadQuestions(\n    amount: number,\n    difficulty: DIFFICULTY,\n    category: CategoryType\n  ) {\n    setDifficulty(difficulty);\n    setCategory(category);\n    getQuestions({\n      variables: {\n        amount,\n        categoryID: category.id,\n        difficulty: DIFFICULTY[difficulty],\n      },\n    });\n  }\n\n  // update game state after receiving questions data from the api\n  useEffect(() => {\n    if (questionsData) {\n      setQuestions(questionsData[\"getQuestions\"]);\n      setIsGameStarted(true);\n    }\n  }, [questionsData]);\n\n  function handleNextQuestion() {\n    setCurrentQuestionIndex((p) => {\n      // game over if user is on last question and presses next\n      if (p + 1 === questions.length) {\n        submitResult();\n        return 0;\n      }\n      return p + 1;\n    });\n  }\n\n  // submit result to the api\n  async function submitResult() {\n    try {\n      if (!difficulty) return;\n\n      const resultObj = {\n        category: category?.name,\n        userID: user.id,\n        difficulty: DIFFICULTY[difficulty],\n        totalQuestions: questions.length,\n        rightQuestions: points / 10,\n      };\n\n      const res = await addResult({ variables: resultObj });\n      console.log(res);\n\n      setIsGameOver(true);\n      setIsGameStarted(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  function handleAnswerSubmit(isCorrect: boolean) {\n    if (isCorrect) {\n      // incrementing points by 10 for each right answer submit\n      // TODO: increment points based on difficulty EASY: 10, MEDIUM: 20, HARD: 30\n      setPoints((p) => p + 10);\n    }\n  }\n\n  function handlePlayAgain() {\n    setIsGameOver(false);\n    setPoints(0);\n    setCurrentQuestionIndex(0);\n  }\n\n  return (\n    <CenterContainer>\n      {questionsError && <H2>{questionsError.message}</H2>}\n      {addResultLoading && (\n        <LoadingCat center={true} label={\"Submitting result...\"} />\n      )}\n      {isLoadingQuestions ? (\n        <LoadingCat center={true} label={\"Loading questions...\"} />\n      ) : (\n        <CenterContainerChild>\n          {isGameStarted && !addResultLoading && (\n            <QuestionScreen\n              question={questions[currentQuestionIndex]}\n              points={points}\n              onNext={handleNextQuestion}\n              onAnswer={handleAnswerSubmit}\n              index={currentQuestionIndex}\n            />\n          )}\n          {!isGameOver && !isGameStarted && (\n            <StartScreen callback={loadQuestions} />\n          )}\n          {isGameOver && !addResultLoading && (\n            <ResultScreen\n              onPlayAgain={handlePlayAgain}\n              points={points}\n              questions={questions}\n            />\n          )}\n        </CenterContainerChild>\n      )}\n    </CenterContainer>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/index\";\nimport { UserProvider } from \"./provider/userProvider\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri:\n    process.env.NODE_ENV === \"development\"\n      ? \"http://192.168.1.24:4000/\"\n      : \"https://floating-peak-33163.herokuapp.com/\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <UserProvider>\n        <App />\n      </UserProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}